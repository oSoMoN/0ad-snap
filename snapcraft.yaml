name: 0ad
adopt-info: 0ad-svn-build
summary: Real-time strategy game of ancient warfare
description: |
 0 A.D. (pronounced “zero-ey-dee”) is a free, open-source, historical
 Real Time Strategy (RTS) game currently under development by Wildfire Games,
 a global group of volunteer game developers.
 As the leader of an ancient civilization, you must gather the resources
 you need to raise a military force and dominate your enemies.
 .
 “0 A.D.” is a time period that never actually existed: In the usual calendar,
 one goes from 1 B.C. to 1 A.D. and skips zero. This reflects the historical
 fiction in the game: Who would have won if all the factions were pitted
 against each other when each of them was at its prime?
 .
 We intend to portray some of the major civilizations over the millennium of
 500 B.C. to 500 A.D. (Hence the midpoint, zero.) That is an ambitious prospect,
 so in the first edition of 0 A.D. we focus on the last five centuries B.C.
 Perhaps in future expansion packs, more civilizations will be added,
 along with additional gameplay features.
 .
 We put a strong emphasis on historical accuracy while developing 0 A.D.
 We plan all our units and all our buildings based on reconstructions of how
 the units and the buildings might have looked like in the ancient world.
 We even name them in the original languages, such as Greek and Latin.
 But it’s worth remembering that any game should be fun to play, so,
 in many cases, we preferred playability over historical accuracy.
license: GPL-2.0+
confinement: strict
base: core18

apps:
  0ad:
    command: play0ad.launcher
    desktop: 0ad.desktop
    common-id: com.play0ad.zeroad
    plugs:
      - audio-playback
      - desktop
      - home
      - network
      - network-bind
      - opengl
      - process-control
      - removable-media
      - screen-inhibit-control
      - x11
  atlas:
    command: play0ad.launcher -editor
    plugs:
      - audio-playback
      - desktop
      - home
      - opengl
      - process-control
      - removable-media
      - x11

layout:
  /usr/share/libdrm:
    bind: $SNAP/usr/share/libdrm

parts:
  0ad-svn-build:
    plugin: nil
    source: https://github.com/0ad/0ad.git
    build-packages:
      - cargo
      - cmake
      - coreutils
      - git
      - grep
      - libboost-dev
      - libboost-filesystem-dev
      - libcurl4-gnutls-dev
      - libenet-dev
      - libfmt-dev
      - libfreetype6-dev
      - libgloox-dev
      - libicu-dev
      - libminiupnpc-dev
      - libnspr4-dev
      - libogg-dev
      - libopenal-dev
      - libpng-dev
      - libsdl2-dev
      - libsodium-dev
      - libvorbis-dev
      - libwxgtk3.0-dev
      - libxcursor-dev
      - libxml2-dev
      - patch
      - pkg-config
      - python
      - rustc
      - zlib1g-dev
    # The override-pull and override-build scriptlets for this part try to
    # optimize for disk space use on the builders (GitHub-hosted runners
    # currently have 14GB of disk space, see
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources).
    # As a side effect, incremental builds are broken. The purpose of this build
    # recipe is one-off daily builds, so that should be okay.
    override-pull: |
      snapcraftctl pull
      svnrev=$(git log | grep -m1 git-svn-id | cut -d@ -f2 | cut -d' ' -f1)
      snapcraftctl set-version trunk~$svnrev
      # Remove git history and unneeded files to save space on the builders
      rm -rf .git
      rm -rf binaries/system/*.bat binaries/system/*.dll binaries/system/*.lib binaries/system/*.pdb
      rm -rf libraries/osx libraries/win32
      # Temporarily remove unused files that require a newer version of
      # libfmt-dev than the version available in Ubuntu 18.04 to build
      # (see https://trac.wildfiregames.com/changeset/27329)
      rm -f source/ps/containers/StaticVector.h source/ps/containers/tests/test_StaticVector.h
    override-build: |
      rm -rf $SNAPCRAFT_PART_SRC # Nasty, but saves a lot of space
      patch -d . -p1 < $SNAPCRAFT_PROJECT_DIR/patches/allow-build-with-root.patch
      patch -d . -p1 < $SNAPCRAFT_PROJECT_DIR/patches/spidermonkey-release-only.patch
      env SHELL=/bin/sh build/workspaces/update-workspaces.sh -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      patch -d . -p1 < $SNAPCRAFT_PROJECT_DIR/patches/allow-running-as-root.patch
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT config=release -C build/workspaces/gcc
      rm -rf binaries/system/test libraries/source/fcollada libraries/source/spidermonkey/mozjs-*
      P=binaries/data
      ./binaries/system/pyrogenesis -mod=mod -archivebuild=$P/mods/public -archivebuild-output=$P/public.zip
      ./binaries/system/pyrogenesis -archivebuild=$P/mods/mod -archivebuild-output=$P/mod.zip
      rm -rf $P/mods/public/art $P/mods/public/audio
      patch -d . -R -p1 < $SNAPCRAFT_PROJECT_DIR/patches/allow-running-as-root.patch
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT config=release -C build/workspaces/gcc pyrogenesis
      rm -rf build/workspaces/gcc/obj
      find . -name *.o -exec rm -f {} \;
      P=binaries/system
      mkdir -p $SNAPCRAFT_PART_INSTALL/$P
      mv $P/libnvcore.so $P/libnvimage.so $P/libnvmath.so $P/libnvtt.so $SNAPCRAFT_PART_INSTALL/$P/
      mv $P/pyrogenesis $P/ActorEditor $P/libAtlasUI.so $P/libCollada.so $P/libmozjs*-ps-release.so $P/readme.txt $SNAPCRAFT_PART_INSTALL/$P/
      P=binaries/data
      mkdir -p $SNAPCRAFT_PART_INSTALL/$P
      mv $P/config $P/l10n $P/tools $SNAPCRAFT_PART_INSTALL/$P/
      mkdir -p $SNAPCRAFT_PART_INSTALL/$P/mods/public
      mv $P/public.zip $SNAPCRAFT_PART_INSTALL/$P/mods/public/
      mkdir -p $SNAPCRAFT_PART_INSTALL/$P/mods/mod
      mv $P/mod.zip $SNAPCRAFT_PART_INSTALL/$P/mods/mod/
      cp build/resources/0ad.desktop $SNAPCRAFT_PART_INSTALL/
      cp build/resources/0ad.png $SNAPCRAFT_PART_INSTALL/
      sed -i -e "s#Icon=0ad#Icon=/0ad.png#" $SNAPCRAFT_PART_INSTALL/0ad.desktop
      cp $SNAPCRAFT_PROJECT_DIR/play0ad.launcher $SNAPCRAFT_PART_INSTALL/
  dependencies:
    plugin: nil
    prime:
      - etc/fonts/
      - lib/
      - usr/lib/
      - usr/share/fonts/
      - usr/share/libdrm/
      - usr/share/themes/
      - usr/share/X11/
    stage-packages:
      - libboost-filesystem1.65.1
      - libboost-system1.65.1
      - libcurl3-gnutls
      - libdrm-common
      - libenet7
      - libfreetype6
      - libgl1-mesa-glx
      - libgloox15
      - libicu60
      - libminiupnpc10
      - libnspr4
      - libopenal1
      - libpng16-16
      - libsdl2-2.0-0
      - libsodium23
      - libvorbisfile3
      - libwxbase3.0-0v5
      - libwxgtk3.0-0v5
      - libx11-6
      - libxcursor1
      - libxml2
      - locales-all
